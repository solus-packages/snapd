From b588a233cb0e2f1a9a8f8474dda6ccbb6d4d2294 Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey@solus-project.com>
Date: Mon, 13 Nov 2017 02:30:38 +0000
Subject: [PATCH 2/3] cmd: Support exposing NVIDIA Vulkan ICD files to the
 snaps

This builds upon the NVIDIA support by copying the ICD files from the
static host location `/usr/share/vulkan/icd.d` into a new tmpfs under
`/var/lib/snapd/lib/vulkan` so that interested parties can make use
of them from within the snap environment.

This can be used by interested snaps by setting VK_ICD_FILENAMES to
this directory, and is a requirement for correctly implementing full
Vulkan support in the linux-steam-integration snap.

Signed-off-by: Ikey Doherty <ikey@solus-project.com>
---
 cmd/snap-confine/mount-support-nvidia.c   | 17 +++++++++++++++++
 cmd/snap-confine/snap-confine.apparmor.in |  5 +++++
 interfaces/builtin/opengl.go              |  5 +++++
 3 files changed, 27 insertions(+)

diff --git a/cmd/snap-confine/mount-support-nvidia.c b/cmd/snap-confine/mount-support-nvidia.c
index ec2a6938b..29522dc45 100644
--- a/cmd/snap-confine/mount-support-nvidia.c
+++ b/cmd/snap-confine/mount-support-nvidia.c
@@ -37,6 +37,15 @@
 
 #define SC_LIBGL_DIR   "/var/lib/snapd/lib/gl"
 #define SC_LIBGL32_DIR "/var/lib/snapd/lib/gl32"
+#define SC_VULKAN_DIR  "/var/lib/snapd/lib/vulkan"
+
+// Location for NVIDIA vulkan files (including _wayland)
+static const char *vulkan_globs[] = {
+	"/usr/share/vulkan/icd.d/10_nvidia*.json",
+};
+
+static const size_t vulkan_globs_len =
+    sizeof vulkan_globs / sizeof *vulkan_globs;
 
 #ifdef NVIDIA_BIARCH
 
@@ -123,6 +132,8 @@ static const char *nvidia_globs32[] = {
 static const size_t nvidia_globs32_len =
     sizeof nvidia_globs32 / sizeof *nvidia_globs32;
 
+#endif				// ifdef NVIDIA_BIARCH
+
 // Populate libgl_dir with a symlink farm to files matching glob_list.
 //
 // The symbolic links are made in one of two ways. If the library found is a
@@ -230,6 +241,8 @@ static void sc_mount_and_glob_files(const char *rootfs_dir,
 	}
 }
 
+#ifdef NVIDIA_BIARCH
+
 static void sc_mount_nvidia_driver_biarch(const char *rootfs_dir)
 {
 	sc_mount_and_glob_files(rootfs_dir, SC_LIBGL_DIR,
@@ -327,4 +340,8 @@ void sc_mount_nvidia_driver(const char *rootfs_dir)
 #ifdef NVIDIA_BIARCH
 	sc_mount_nvidia_driver_biarch(rootfs_dir);
 #endif				// ifdef NVIDIA_BIARCH
+
+	// Common for both driver mechanisms
+	sc_mount_and_glob_files(rootfs_dir, SC_VULKAN_DIR,
+				vulkan_globs, vulkan_globs_len);
 }
diff --git a/cmd/snap-confine/snap-confine.apparmor.in b/cmd/snap-confine/snap-confine.apparmor.in
index 6249bdb37..e88e2f518 100644
--- a/cmd/snap-confine/snap-confine.apparmor.in
+++ b/cmd/snap-confine/snap-confine.apparmor.in
@@ -258,6 +258,11 @@
     mount fstype=tmpfs options=(rw nodev noexec) none -> /tmp/snap.rootfs_*/var/lib/snapd/lib/gl{,32}/,
     mount options=(remount ro) -> /tmp/snap.rootfs_*/var/lib/snapd/lib/gl{,32}/,
 
+    # Vulkan support
+    /tmp/snap.rootfs_*/var/lib/snapd/lib/vulkan/* w,
+    mount fstype=tmpfs options=(rw nodev noexec) none -> /tmp/snap.rootfs_*/var/lib/snapd/lib/vulkan/,
+    mount options=(remount ro) -> /tmp/snap.rootfs_*/var/lib/snapd/lib/vulkan/,
+
     # for chroot on steroids, we use pivot_root as a better chroot that makes
     # apparmor rules behave the same on classic and outside of classic.
 
diff --git a/interfaces/builtin/opengl.go b/interfaces/builtin/opengl.go
index 150056000..8d8276de3 100644
--- a/interfaces/builtin/opengl.go
+++ b/interfaces/builtin/opengl.go
@@ -45,6 +45,11 @@ const openglConnectedPlugAppArmor = `
   /var/lib/snapd/hostfs/{,usr/}lib{,32,64,x32}/{,@{multiarch}/}lib{GL,EGL}*nvidia.so{,.*} rm,
   /var/lib/snapd/hostfs/{,usr/}lib{,32,64,x32}/{,@{multiarch}/}libGLdispatch.so{,.*} rm,
 
+  # Support reading the Vulkan ICD files
+  /var/lib/snapd/lib/vulkan/ r,
+  /var/lib/snapd/lib/vulkan/** r,
+  /var/lib/snapd/hostfs/usr/share/vulkan/icd.d/10_nvidia*.json r,
+
   # Main bi-arch GL libraries
   /var/lib/snapd/hostfs/{,usr/}lib{,32,64,x32}/{,@{multiarch}/}lib{GL,EGL}.so{,.*} rm,
 
-- 
2.15.0

